{"version":3,"file":"static/js/437.637ce854.chunk.js","mappings":"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","sources":["webpack://my-network/./src/components/News/YouTubeFormFomik/YouTubeForm.module.css?ac4a","components/News/YouTubeFormFomik/YouTubeForm.js","components/News/News.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"YouTubeForm_wrapper__bvYfJ\"};","import React from 'react';\r\n\r\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport s from './YouTubeForm.module.css';\r\nimport TextError from './TextError';\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\temail: '',\r\n\tchannel: '',\r\n\tcomments: '',\r\n\taddress: '',\r\n\tsocial: {\r\n\t\tfacebook: '',\r\n\t\ttwitter: '',\r\n\t},\r\n\tphoneNumbers: ['', ''],\r\n\tphNumbers: [''],\r\n};\r\n\r\nconst onSubmit = (values, onSubmitProps) => {\r\n\tconsole.log('Form data', values);\r\n\tonSubmitProps.resetForm();\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().required('Required'),\r\n\temail: Yup.string().email('Invalid email format ').required('Required'),\r\n\tchannel: Yup.string().required('Required'),\r\n});\r\nexport default function YouTubeForm() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n\t\t\t\t<div className={s.wrapper}>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t<label htmlFor='name'>Name</label>\r\n\t\t\t\t\t\t\t<Field type='text' id='name' name='name' />\r\n\t\t\t\t\t\t\t<ErrorMessage name='name' component={TextError} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t<label htmlFor='email'>E-mail</label>\r\n\t\t\t\t\t\t\t<Field type='email' id='email' name='email' />\r\n\t\t\t\t\t\t\t<ErrorMessage name='email' component={TextError} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t<label htmlFor='channel'>Channel</label>\r\n\t\t\t\t\t\t\t<Field type='text' id='channel' name='channel' />\r\n\t\t\t\t\t\t\t<ErrorMessage name='channel'>\r\n\t\t\t\t\t\t\t\t{(errorMsg) => <div className='error'>{errorMsg}</div>}\r\n\t\t\t\t\t\t\t</ErrorMessage>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='comments'>Comments</label>\r\n\t\t\t\t\t\t\t\t<Field as='textarea' id='comments' name='comments' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='address'>Address</label>\r\n\t\t\t\t\t\t\t\t<Field name='address'>\r\n\t\t\t\t\t\t\t\t\t{(props) => {\r\n\t\t\t\t\t\t\t\t\t\tconst { field, meta } = props;\r\n\t\t\t\t\t\t\t\t\t\t// console.log('Render props', props);\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' id='address' {...field} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{meta.touched && meta.error ? <div>{meta.error}</div> : null}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='twitter'>Twitter profile</label>\r\n\t\t\t\t\t\t\t\t<Field type='text' id='twitter' name='social.twitter' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='facebook'>Facebook profile</label>\r\n\t\t\t\t\t\t\t\t<Field type='text' id='facebook' name='social.facebook' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='primaryPh'>Primary phone number</label>\r\n\t\t\t\t\t\t\t\t<Field type='text' id='primaryPh' name='phoneNumbers[0]' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='secondaryPh'>Secondary phone number</label>\r\n\t\t\t\t\t\t\t\t<Field type='text' id='secondaryPh' name='phoneNumbers[1]' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t\t<label>List of phone numbers</label>\r\n\t\t\t\t\t\t\t\t<FieldArray type='text' id='secondaryPh' name='phNumbers'>\r\n\t\t\t\t\t\t\t\t\t{(fieldArrayProps) => {\r\n\t\t\t\t\t\t\t\t\t\t// console.log('Field ArrayProps', fieldArrayProps);\r\n\t\t\t\t\t\t\t\t\t\tconst { push, remove, form } = fieldArrayProps;\r\n\t\t\t\t\t\t\t\t\t\tconst { values } = form;\r\n\t\t\t\t\t\t\t\t\t\tconst { phNumbers } = values;\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{phNumbers.map((phoneNumber, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name={`phNumbers[${index}]`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button type='button' onClick={() => push('')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{index > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button type='button' onClick={() => remove(index)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t</FieldArray>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\tSubmit{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{/* <button className='btn' type='reset'>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\tReset{' '}\r\n\t\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</Formik>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport YouTubeForm from './YouTubeFormFomik/YouTubeForm';\r\n\r\nexport default function News() {\r\n\treturn <YouTubeForm />;\r\n}\r\n"],"names":["initialValues","name","email","channel","comments","address","social","facebook","twitter","phoneNumbers","phNumbers","onSubmit","values","onSubmitProps","console","log","resetForm","validationSchema","Yup","shape","required","YouTubeForm","className","s","htmlFor","type","id","component","TextError","errorMsg","as","props","field","meta","touched","error","fieldArrayProps","push","remove","form","map","phoneNumber","index","onClick","News"],"sourceRoot":""}